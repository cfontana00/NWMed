#!/bin/ksh

# Load common profile
. @@(I:MIT_HOME)/bin/mit_profile.inc

# Rundate definition
mit_set_run

# start
mit_start
mit_prex "source $MIT_VENV_1/bin/activate"
export PYTHONPATH=$PYTHONPATH:$MIT_BITSEA

DATESTART=$( date -d "${MIT_RUNDATE}  -  7 days  " +%Y%m%d-%H:%M:%S )
DATE__END=$( date -d "${MIT_RUNDATE}  + 72 hours " +%Y%m%d-%H:%M:%S )

MASKFILE=$MIT_WRKDIR/BC_IC/mask.nc

FRC_DIR=$MIT_HOSTDIR/MITgcm_meteo_forcing
FRC_DIR_MAT=$FRC_DIR/wrf
FRC_DIR_GRIB=$FRC_DIR/meteo_grib
FRC_DIR_NC=$FRC_DIR/meteo_nc/$MIT_RUNDATE
FRC_DIR_TXT=$FRC_DIR/meteo_txt/$MIT_RUNDATE
[ -d $FRC_DIR_GRIB ] || mkdir -p $FRC_DIR_GRIB;
[ -d $FRC_DIR_NC ] || mkdir -p $FRC_DIR_NC;
[ -d $FRC_DIR_TXT ] || mkdir -p $FRC_DIR_TXT;
wrf_grb=00_arw_ecm_3km.grb
wrf_nc=00_arw_ecm_3km.nc
WRF_DIR=/OCEANASTORE/progetti/meteop/data/wrf03ecm
for i in {0..7}
do
    DATE_I=$( date -d "${MIT_RUNDATE}  -  ${i} days  " +%Y%m%d )
    ifile=$DATE_I$wrf_grb
    ofile=$DATE_I$wrf_nc
    cp $WRF_DIR/$ifile $FRC_DIR_GRIB
    grib_filter -o $FRC_DIR/temp.grb $FRC_DIR/winds_scripts/filters/grib.filter.wrf03ecm.test $FRC_DIR_GRIB/$ifile
    grib_to_netcdf -D NC_FLOAT $FRC_DIR/temp.grb -o $FRC_DIR_NC/$ofile

done

rm $FRC_DIR_GRIB/* $FRC_DIR/temp.grb
#
# Sets up the MCR environment
# 
MCRROOT=/cluster/universal/matlab/opt/matlab_R2012b/MATLAB_Compiler_Runtime/v80/
MCRJRE=${MCRROOT}/sys/java/jre/glnxa64/jre/lib/amd64
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRROOT}/runtime/glnxa64
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRROOT}/bin/glnxa64
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRROOT}/sys/os/glnxa64
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRJRE}/native_threads
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRJRE}/server
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MCRJRE}
XAPPLRESDIR=${MCRROOT}/X11/app-defaults
export LD_LIBRARY_PATH
export XAPPLRESDIR

$FRC_DIR_MAT/make_meteo_mitgcm_fc_wrf $MIT_RUNDATE > $MIT_RUNLOGDIR/mat.log

#TIMELISTFILE=$MIT_WRKDIR/METEO/meteo_timelist.txt

#MASK_ARSO=$MIT_WRKDIR/METEO/mask.arso.nc
#mit_prex_or_die "gzip -cd $MIT_BC_IC_FROM_OGSTM_DIR/static-data/masks/METEO/mask.nc.gz > $MASK_ARSO "

#for I in `ls $DOWNLOADED_METEO/*gz `; do mit_prex_or_die "tar -xzf $I -C $ORIG_METEO "; done

##################################################################



### Step 3. Space Interpolation   ###############################

#mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/TimeList_generator.py -s $DATESTART -e $DATE__END --hours 1 > $TIMELISTFILE "
#mit_prex_or_die " mpirun -np 1 python $MIT_BC_IC_FROM_OGSTM_DIR/meteo_generator.py -i $ORIG_METEO -o $BC_METEO -m $MASKFILE --nativemask $MASK_ARSO -t $TIMELISTFILE "

DOWNLOADED_METEO=$MIT_WRKDIR/METEO/DOWNLOAD
#ORIG_METEO=$MIT_WRKDIR/METEO/ORIG
#ORIG_METEO=$MIT_HOME/../forcings/wrf/output/20220113/mitgcm_binary
ORIG_METEO=$FRC_DIR/meteo_txt/$MIT_RUNDATE
BC_METEO=$MIT_WRKDIR/METEO/BC

[ -d $ORIG_METEO ] || mkdir -p $ORIG_METEO;
[ -d $BC_METEO ] || mkdir -p $BC_METEO;


mit_prex_or_die "cp $ORIG_METEO/BC* $BC_METEO "

##################################################################


#mit_prex_or_die " mv $BC_METEO/CHECK $MIT_WRKDIR "


mit_exit "$errors"



